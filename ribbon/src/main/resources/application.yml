server:
  port: 7071
eureka:
  client:
    service-url:
      # 指定eureka server通信地址，注意/eureka/小尾巴不能少
      defaultZone: http://admin:admin@peer1:8761/eureka/,http://admin:admin@peer2:8762/eureka/

spring:
  application:
    name: consumer_ribbon

#负载均衡配置
#consumer_ribbon:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule


ribbon:
  #自定义负载均衡
  NFLoadBalancerRuleClassName: com.study.ribbonrule.MyRibbonRule
  #配置ribbon饥饿加载(默认为懒加载，首次请求Ribbon相关类才会初始化)
  eager-load:
    enabled: true
    #多个用,分割
    clients: provider-user
feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
      #制定某一个Feign Client
#      provider-user:
#        connectTimeout: 5000  # 相当于Request.Options
#        readTimeout: 5000     # 相当于Request.Options
#        loggerLevel: full     # 配置Feign的日志级别，相当于代码配置方式中的Logger
##        # Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
##        errorDecoder: com.example.SimpleErrorDecoder
##        # 配置重试(不建议配置retryer，Spring Cloud Camden以及之后的版本中，Spring Cloud关闭了Feign的重试，而是使用Ribbon的重试。如果自己再定义Feign的重试后，那么可能会造成重试特性的混乱。)
##        retryer: com.example.SimpleRetryer
##        #配置拦截器
##        requestInterceptors:
##          - com.example.FooRequestInterceptor
##          - com.example.BarRequestInterceptor
#        decode404: false
#logging:
#  level:
#    com.study.ribbon.service.HelloFeignClient: debug
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: 'hystrix.stream'